#!/bin/bash

function usage 
{
	echo -e "Wrong number of parameters!"
	echo -e "Usage:"
	echo -e "	create_module <module name> <package>"
	echo -e "	- <module name>: Name of the module that will be created."
	echo -e "	- <package>: Package where the module will be created."
	echo -e ""
	echo -e "	Example:"
	echo -e "		create_module my_module my.module.package"

	exit 1
}

# $1 path; $2 text
function add_import
{
	if [ -e "${1}/__init__.py" ]
	then
		count=`grep -c -w "${2}" "${1}/__init__.py"`

		if [ $count -eq 0 ]
		then
			line=`grep -n -m 1 -w "import" "${1}/__init__.py" | cut -f1 -d:`

			if [ -n "${line}" ]
			then
				sed -i "${line}i${2}" "${1}/__init__.py"
			else
				echo "${2}" >> "${1}/__init__.py"
			fi
		fi
	fi	
}

if [ $# -lt 2 ]
then
	usage
fi

path="."
header="\"\"\"\nGenerated by <Python Project Utils>\nVisit the project in http://code.google.com/p/python-project-utils/\n\"\"\"\n"

for folder in $(echo -e $2 | tr "." "\n")
do
	parent_path=$path
	path="${path}/${folder}"

	if [ ! -d $path ]
	then
		mkdir $path
	fi

	if [ ! -e "${path}/__init__.py" ]
	then
		echo -e "${header}" > "${path}/__init__.py"
	fi

	add_import $parent_path "import ${folder}"
done

if [ ! -e "${path}/${1}.py" ]
then
	echo -e "${header}" > "${path}/${1}.py"
fi

if [ $1 != "__main__" ]
then
	add_import $path "from ${1} import *"
fi
